1. Выбраны ОС, реалицации ПО, языков программирования, версии, фреймфорки, средства разработки в соответствии с ТЗ. Создан стенд для разработки и тестирования. 
А именно сервер:
 - Ubuntu 12.04 
 - Asterisk 11.7.0 
 - Python 2.7.6
 - Twisted Python 12.0.0
 - StarPy 1.0.0a13
 - zope.interface 3.6
 - HTTP_Client 1.2.1 + HTTP_Request2
Клиент:
 - QT Project Qt 5.2.1

2. В качестве интерфейса взаимодействия демона с Asterisk выбрано AMI.
3. За основу для разработки демона взято решение Monast с исходниками Демон назван Twiast (Twisted + Asterisk).
Плюсы:
 - готовая реализация демона;
 - логирование;
 - настройка пользователей серверов Asterisk, параметров через файл конфигурации;
 - использование AMI;
 - использование Twisted;
 - использование StarPy.
Дополнительно:
 - оставлена только Pуthon часть. PHP и HTML убраны.
 - проведена настройка сервера Asteriks и нового демона, проверено соединение и взаимодействие по AMI.

3. Сделана программа на Qt, содержащая класс С++, реализующий предложенный интерфейс. Интрерфейс будет тестироваться через задание параметров на форме и последовательные нажатия кнопок для вызова соответствующих методов класса.

4. Дальнейшая работа и вопросы:
 - В ТЗ сказано, что С++ клиент  взаимодействует с сервером через REST сервисы и XML. Если это обязательное условие, то нужно будет использовать REST фреймворки Pyhon, например Python REST API Framework, Django REST API Framework, прочие... Если нет, то можно использовать замену реактора в Twisted например на QT4Reactor. Нужно сделать выбор.
 - Полная реализация и тестирование методов интерфейса.
 - Сравнение времени запроса и локального. Инорирование запроса если необходимо.
 - Формирование подписи.
 - Использование twisted.internet.notify для отслеживания изменений конфигурации.
 - Портирование на чистый Debian 6.0 и инструкция по установке и настройке.
